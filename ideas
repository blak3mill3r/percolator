Yay for lein-gwt working and adding DevMode to it!

Now... percolator needs to take a path and write .java files to it according to the java package/path convention
That could integrate with leiningen java build process perhaps
there's probably already something in a leiningen project definition for that (java src path)
need to read about leiningen, does it timestamp files to know they need to be rebuilt or hash them?
need an example of some other compilation process in leiningen

GOOD IDEA
  scope inheritance
  right now it's a list of inherited scopes for each scope
  but they aren't recursive
  need a clojure graph library or something
  and it should call each wrapper as it traverses the graph



can bits of percolator internals be refactored for simmplicity w/ definterpreter?
no, bad idea, because
definterpreter is for making macro-ey forms that build percolator forms
no real need for it in core I think
maybe there will be, but percolator internals now (defn interpret-expression-*) are fine

GWT essentials

  RPC - works
  History management
  Bookmarking? from Wikipedia
  i18n
  Code splitting!
  UiBinder xml crap wrapper
  resource bundling


Mobile?
   An HTML5 app written in GWT can have separate views for Tablets and Mobile phones.

   Some of the most common mobile GWT libraries
    
   m-gwt
   GwtMobile
   gwt-mobile-webkit


PASTED FROM test.clj

      ;( 'add ( '>RootPanel/nameFieldContainer ) nameField )
        ; cool idea
        ; if a symbol starts with a special character like > above
        ; it is a special gwt-specific expression
        ; such as apanel.get("a_domid")

      ; would be nice if above could be written
      ;( 'doto nameField
      ;  ('focus)
      ;  ('select-all))

      ; rewrite above as
      ; NOTE: this is purely imaginary
      ;   (comment

      ;( 'vpanel dialogVPanel )

      ;    ; a series of panel manipulations
      ;    ; so '<-- would be a statement interpreter
      ;    ; producing a BlockStmt
      ;    ; kinda like a doto but the forms are panel manipulations
      ;( '<-- dialogVPanel
      ;  :.dialogVPanel             ; keyword starting with . css style name
      ;  :#foo                      ; keyword starting with # dom id
      ;  "<b>Sending name etc </b>" ; straight HTML
      ;  textToServerLabel          ; symbol not beginning with . is a widget to add
      ;  [ :b "Server Response" ]   ; hiccup, would be insanely cool to support run-time variables in here
      ;  serverResponseLabel        
      ;  :align-right               ; keyword are special syntax that map to special things like setHorizontalAlignment VerticalPanel/ALIGN_RIGHT
      ;)

      ;     )

      ; back to stuff that works...

